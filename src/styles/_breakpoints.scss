@import './vars';

/// Wraps a media query around the content you put inside the mixin.
///
/// @param {Keyword|Number} $breakpoint... - Breakpoint name(s)(sm, md, lg, xl, max)
///
/// @output Outputs the content wrapped in a media query.
@mixin breakpoint($breakpoint...) {
  @each $bp in $breakpoint {
    @if map-has-key($breakpoints, $bp) {
      @if $bp == xs {
        @media (max-width: 320px) {
          @content;
        }
      } @else if $bp == sm {
        @media (min-width: 321px) and (max-width: 672px) {
          @content;
        }
      } @else if $bp == md {
        @media (min-width: 673px) and (max-width: 1183px) {
          @content;
        }
      } @else if $bp == lg {
        @media (min-width: 1184px) and (max-width: 1311px) {
          @content;
        }
      } @else if $bp == xlg {
        @media (min-width: 1312px) and (max-width: 1583px) {
          @content;
        }
      } @else if $bp == max {
        @media (min-width: 1584px) {
          @content;
        }
      }
    } @else {
      @warn 'breakpoint(): "#{$bp}" is not a supported breakpoint.';
    }
  }
}

/// Wraps a media query around the content you put inside the mixin.
///
/// @param {Keyword|Number} device... - Name of device to target(mobile, tablet, desktop)
///
/// @output Outputs the content wrapped in a media query.
@mixin device($device...) {
  @each $dev in $device {
    @if map-has-key($devices, $dev) {
      $breakpoint: map-get($devices, $dev);
      @each $bp in $breakpoint {
        @include breakpoint($bp) {
          @content;
        }
      }
    } @else {
      @warn 'device(): "#{$dev}" is not a supported device.';
    }
  }
}
